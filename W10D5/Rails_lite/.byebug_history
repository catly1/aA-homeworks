exit
self.routes
proc.call
exit
@routes
exit
@routes
self
self.class
self.methods
exit
self.methods
self
self.get
@routes
self.get
proc
proc.call(self)
exit
res.path
res
req
res.param
res.params
res.route
res.routes
exit
exity
res
req
@controller_class.new(req, res)
@controller_class.class
@controller_class
@controller_class.new()
@controller_class.new
@controller_class
@coltroller_class
c
exit
eqit
req.path
req.url
routs.url
@pattern
@action_name
@controller_class
res.params
req.params
self.class.name
self
req.route
req.routes
req.route_params
req.class
req.path
req.methods
req.url
res
rex
req
exit
req.request_method.to_s.downcase.to_sym
req.request_method.to_s.downcase
 @http_method
@pattern =~ "/users"
@pattern =~ "/user"
@pattern =~ "/bad"
@pattern =~ req.path
@http_method
req.request_method
@pattern.match(req.path)
req.path
req
req.path
self
@pattern
exit
req
q
exit
c
display cookie
cookie
c
cookie
c
cookie
c
res["_rails_lite_app"]
c
res["_rails_lite_app"]c
res["_rails_lite_app"]
@cookie
!!@cookie["_rails_lite_app"]
!@cookie["_rails_lite_app"]
!!@cookie["_rails_lite_app"]
!@cookie["_rails_lite_app"]
@cookie["_rails_lite_app"]
res
@cookie
res
exit
@cookie
@cookie["_rails_lite_app"]
c
exit
res.to_json
res.methods.include?("to_json")
res.methods
res.cookie
res[cookie]
res.cookies
res
q
exit
res.set_cookie("_rails_lite_app", {})
res.set_cookie("_rails_lite_app", {}]
res
res.class
res.set_cookie['sadas']
res.env
res
res.methods
res.cookies
res
q
res
q
exit
y
exit
q
exit
JSON.parse(@req.cookies["_rails_lite_app"])
@req.cookies["_rails_lite_app"]
@req.cookies
q
exit
@req
JSON.parse(@req.cookies["_rails_lite_app"])
JSON.parse(@req.cookies)
@req.cookies
c
q
exit
@cookie["_rails_lite_app"]
@cookie
cok
c
cok
c
@req.cookies["_rails_lite_app"]
cok
c
cok
q
exit
eix
JSON.parse(@req.cookies["_rails_lite_app"])
JSON.parse(@req.env["rack.request.cookie_hash"]["_rails_lite_app"]).keys.first
JSON.parse(@req.env["rack.request.cookie_hash"]["_rails_lite_app"]).first
JSON.parse(@req.env["rack.request.cookie_hash"]["_rails_lite_app"])["xyz"]
JSON.parse(@req.env["rack.request.cookie_hash"]["_rails_lite_app"])
Json.parse(@req.env["rack.request.cookie_hash"]["_rails_lite_app"])
@req.env["rack.request.cookie_hash"]["_rails_lite_app"].parse
@req.env["rack.request.cookie_hash"]["_rails_lite_app"].to_json.parse
@req.env["rack.request.cookie_hash"]["_rails_lite_app"].to_json.class
@req.env["rack.request.cookie_hash"]["_rails_lite_app"].to_json
@req.env["rack.request.cookie_hash"]["_rails_lite_app"].to_h
@req.env["rack.request.cookie_hash"]["_rails_lite_app"].to_hash
@req.env["rack.request.cookie_hash"]["_rails_lite_app"].as_json.class
@req.env["rack.request.cookie_hash"]["_rails_lite_app"].as_json
@req.env["rack.request.cookie_hash"]["_rails_lite_app"].as_josn
@req.env["rack.request.cookie_hash"]["_rails_lite_app"].class
@req.env["rack.request.cookie_hash"]["_rails_lite_app"]
@req.env["rack.request.cookie_hash"]
@req.env
@req
@req.methods
req
ewq
@cookie["_rails_lite_app"].methods
@cookie["_rails_lite_app"]
req.methods
exit
req
key
@cookie[key]
@cookie
@cookie[key]
exit
key
@key
c
@cookie
c
@cookie
exit
@cookie
@cookie[key] = val
@cookie
exit
@cookie.to_json
@cookie.as_json
req.cookies["_rails_lite_app"].to_hash
@cookie.class
@cookie
exit
@cookie.class
@cookie[0]
@cookie[1]
@cookie
c
exit
@res.body
@res.body = ["something"]
@res.body
@res.body = "something"
@res.body
@res.content
res.content
res.methods
